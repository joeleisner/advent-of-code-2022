import { assertEquals } from 'std/testing/asserts.ts';
import { getFinalPassword, parseInput } from './mod.ts';

const input = `        ...#
        .#..
        #...
        ....
...#.......#
........#...
..#....#....
..........#.
        ...#....
        .....#..
        .#......
        ......#.

10R5L5R10L4R5L5`;

Deno.test('Day 22: Monkey Map', async (test) => {
    await test.step(
        'Parse input',
        () => {
            assertEquals(
                parseInput(input),
                {
                    position: [8, 0],
                    map: [
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '.',
                            '.',
                            '#',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '#',
                            '.',
                            '.',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '#',
                            '.',
                            '.',
                            '.',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '.',
                            '.',
                            '.',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '#',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                            '.',
                            '.',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            '.',
                            '.',
                            '#',
                            '.',
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                            '.',
                            '.',
                            '.',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                            '.',
                            '.',
                            '.',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                            '.',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '#',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                        ],
                        [
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            ' ',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '.',
                            '#',
                            '.',
                        ],
                    ],
                    instructions: [
                        [10, 'R'],
                        [5, 'L'],
                        [5, 'R'],
                        [10, 'L'],
                        [4, 'R'],
                        [5, 'L'],
                        [5],
                    ],
                },
            );
        },
    );

    const state = parseInput(input);

    await test.step(
        'Final password',
        () => {
            assertEquals(
                getFinalPassword(state),
                6032,
            );
        },
    );
});
